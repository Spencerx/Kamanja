#!/bin/sh
INPUT=$@
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
SCRIPT_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

KAMANJA_HOME="$(dirname "$SCRIPT_DIR")"
export KAMANJA_HOME=$KAMANJA_HOME
ACTION1=$(echo $INPUT | cut -d" " -f1)
ACTION2=$(echo $INPUT | cut -d" " -f2)
ACTION3=$(echo $INPUT | cut -d" " -f3)
jar_full_path=$(which jar)
if [ "$?" != "0" ]; then
	echo "Not found java home directory."
	exit 1
fi

scala_full_path=$(which scala)

if [ "$?" != "0" ]; then
	echo "Not found scala home directory."
	exit 1
fi

pwdnm=$(pwd -P)

JAVA_HOME=$(dirname $(dirname $jar_full_path))
SCALA_HOME=$(dirname $(dirname $scala_full_path))



IFS=' ' read -a array <<< $@
if [ "$#" -eq 0  ]; then
    cat $KAMANJA_HOME/input/HelpMenu.txt
    echo ""
    exit 0
fi
#if config provided, update or add to the config file
if [ "${INPUT[0]}" = "edit" ]; then
  #check if key present in file. If not add to the file. Else update it.
  while read line
  do
  echo $line | grep ${array[2]} >> /dev/null
  if [ $? = 0 ]; then
#do nothing
  echo ""
  else
    #add other lines
    echo $line >> ~/MetadataAPIConfig.temp
  fi
  done < ~/MetadataAPIConfig.properties
  echo "${INPUT[2]}=${INPUT[3]}" >> ~/MetadataAPIConfig.temp
  mv ~/MetadataAPIConfig.temp ~/MetadataAPIConfig.properties
  echo "MetadataAPIConfig.properties update complete!"
  exit 0
fi

if [ "$INPUT" = "start webservice" ]; then
echo "Starting web service . . . ."

java -jar $KAMANJA_HOME/bin/MetadataAPIService-1.0
elif [ "$INPUT" = "start -v" ]; then
   $KAMANJA_HOME/bin/StartEngine.sh

elif [ "$INPUT" = "start" ]; then
  if [ -f /tmp/kamanjastart.log ]; then
    rm /tmp/kamanjastart.log
    touch /tmp/kamanjastart.log
  fi

 nohup $KAMANJA_HOME/bin/StartEngine.sh >> $HOME/kamanjastart.log &
 echo "Kamanja engine started in background. Please check the engine log at /tmp/kamanjastart.log"
elif [ "$INPUT" = "stop" ]; then
    ID=`ps -ef | grep -i java | grep -i KamanjaManager-1.0 | tr -s " " | cut -d" " -f3`
    echo "Stopping Kamanja with process id: $ID"
    kill $ID
    sleep 2
    ID=`ps -ef | grep -i java | grep -i KamanjaManager-1.0 | tr -s " " | cut -d" " -f3`
    if [ "$ID" != "" ]; then
        echo "Failed to stop Kamanja. Found process $ID"
    else
        echo "Kamanja successfully stopped"
    fi
elif [ "$ACTION1 $ACTION2" = "create topic" ]; then
  $KAMANJA_HOME/bin/CreateTopic.sh "$ACTION3"
elif [ "$ACTION1 $ACTION2" = "watch topic" ]; then
  $KAMANJA_HOME/bin/WatchTopic.sh "$ACTION3"
elif [ "$INPUT" = "help" ]; then
cat $KAMANJA_HOME/input/HelpMenu.txt
    echo ""
elif [ "$ACTION1 $ACTION2" = "push data" ]; then
    $KAMANJA_HOME/bin/PushSampleDataToKafka.sh "$ACTION3"
#elif [ "$INPUT" = "kvinit" ]; then
#count=0
#FILEDIR=$KAMANJA_HOME/input/SampleApplications/bin
#for entry in "$FILEDIR"/*
#do
#echo $entry | grep -i InitKvStores >> /dev/null
#if [ $? = 0 ]; then
#count=$((count+1))
#  echo "$count: $entry"
#  LISTOFFILES[count-1]=$entry
#fi
#done
#read -p "Please select from the above options: " useroption
#OPTION=useroption-1
#INPUTFILE=${LISTOFFILES[OPTION]}
#echo "User selected: $INPUTFILE"
#$INPUTFILE
else
java -jar $KAMANJA_HOME/bin/MetadataAPI-1.0 $INPUT
fi
