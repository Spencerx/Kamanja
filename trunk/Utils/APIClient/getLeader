#!/usr/bin/env python

# This utility is written in python (tested under centos 6.x, python 2.6.6)
# Usage: getLeader -n <nodelist> -u userid -p password -r role'
# Example: getLeader -n localhost:6541,localhost:6542 -u john -p mypassword -r myrole
# This function loops through the given list of nodes calling a Rest API "http//..../api/leader" which will respond
# with ipaddress and port of the leader node for MetadataAPIService
import sys, getopt
from subprocess import Popen, PIPE

def main(argv):
   nodelist = ''
   try:
      opts, args = getopt.getopt(argv,"hn:u:p:r",["nodelist=","userid=","password=","role="])
   except getopt.GetoptError:
      print 'getLeader -n <nodelist> -u userid -p password -r role'
      sys.exit(2)
   for opt, arg in opts:
      if opt == '-h':
         print 'getLeader.py -n <nodelist> -u userid -p password -r role'
         sys.exit()
      elif opt in ("-n", "--nodelist"):
         nodelist = arg
      elif opt in ("-u", "--userid"):
         userid = arg
      elif opt in ("-p", "--password"):
         password = arg
      elif opt in ("-r", "--role"):
         role = arg
   nodes = nodelist.split(",")
   for n in nodes:
       cmd = 'curl -k -X GET -H "Content-Type: aplication/json" -H "userid: %s" -H "password: %s" -H "role: %s"  https://%s/api/leader' % (userid,password,role,n)
       p = Popen(cmd , shell=True, stdout=PIPE, stderr=PIPE)
       out, err = p.communicate()
       if p.returncode == 0:
           return out.rstrip()
   return 'Failed to find the leader node'

if __name__ == "__main__":
   rc = main(sys.argv[1:])
   print rc
