On Windows:-

From trunk Do this:

-- Making packages
sbt package

-- Take the Folder where you want to copy the jars and set it to ENV variable and Create that Folder if it does not exists
set ONLEPLIBPATH=D:\temp\OnLEPNew
mkdir %ONLEPLIBPATH%

-- Copy jars required
copy /Y BaseFunctions\target\scala-2.10\basefunctions_2.10-0.1.0.jar %ONLEPLIBPATH%
copy /Y BaseTypes\target\scala-2.10\basetypes_2.10-0.1.0.jar %ONLEPLIBPATH%
copy /Y EnvContexts\SimpleEnvContextImpl\target\scala-2.10\simpleenvcontextimpl_2.10-1.0.jar %ONLEPLIBPATH%
copy /Y InputOutputAdapters\FileSimpleInputOutputAdapters\target\scala-2.10\filesimpleinputoutputadapters_2.10-1.0.jar %ONLEPLIBPATH%
copy /Y InputOutputAdapters\KafkaSimpleInputOutputAdapters\target\scala-2.10\kafkasimpleinputoutputadapters_2.10-1.0.jar %ONLEPLIBPATH%
copy /Y MessageDef\target\scala-2.10\messagedef_2.10-1.0.jar %ONLEPLIBPATH%
copy /Y Metadata\target\scala-2.10\metadata_2.10-1.0.jar %ONLEPLIBPATH%
copy /Y MetadataAPI\target\scala-2.10\metadataapi_2.10-1.0.jar %ONLEPLIBPATH%
copy /Y MetadataBootstrap\MsgsAndContainers\target\scala-2.10\msgsandcontainers_2.10-1.0.jar %ONLEPLIBPATH%
copy /Y OnLEPBase\target\scala-2.10\onlepbase_2.10-1.0.jar %ONLEPLIBPATH%
copy /Y OnLEPManager\target\scala-2.10\onlepmanager_2.10-1.0.jar %ONLEPLIBPATH%
copy /Y Pmml\MethodExtractor\target\scala-2.10\methodextractor_2.10-1.0.jar %ONLEPLIBPATH%
copy /Y Pmml\PmmlCompiler\target\scala-2.10\pmmlcompiler_2.10-1.0.jar %ONLEPLIBPATH%
copy /Y Pmml\PmmlRuntime\target\scala-2.10\pmmlruntime_2.10-1.0.jar %ONLEPLIBPATH%
copy /Y Pmml\PmmlUdfs\target\scala-2.10\pmmludfs_2.10-1.0.jar %ONLEPLIBPATH%
copy /Y Storage\target\scala-2.10\storage_2.10-0.0.0.2.jar %ONLEPLIBPATH%
copy /Y Tools\Loadtest\target\scala-2.10\loadtest_2.10-0.0.0.1.jar %ONLEPLIBPATH%
copy /Y Tools\LoadtestCommon\target\scala-2.10\loadtestcommon_2.10-0.0.0.1.jar %ONLEPLIBPATH%
copy /Y Tools\LoadtestMaster\target\scala-2.10\loadtestmaster_2.10-0.0.0.1.jar %ONLEPLIBPATH%
copy /Y Tools\LoadtestRunner\target\scala-2.10\loadtestrunner_2.10-0.0.0.1.jar %ONLEPLIBPATH%
copy /Y Tools\MetadataBootstrap\target\scala-2.10\metadatabootstrap_2.10-1.0.jar %ONLEPLIBPATH%
copy /Y Tools\OnLEPEBModel\target\scala-2.10\onlepebmodel_2.10-1.0.jar %ONLEPLIBPATH%

-- Copy Sample Config & Log properties
copy /Y OnLEPManager\src\main\resources\* %ONLEPLIBPATH%

-- Copy log4j-1.2.17.jar into the same jars
copy /Y ..\externals\log4j\log4j-1.2.17.jar %ONLEPLIBPATH%

-- Copy Sample Data
copy /Y ..\externals\SampleData\EngineSampleData\events_20140807.csv.gz %ONLEPLIBPATH%

-- Change to that directory
cd %ONLEPLIBPATH%

-- Create \tmp folder in the same drive (say if we use d:\ as ONELEPBASEPATH drive, then create d:\tmp, if c:\ is ONELEPBASEPATH drive the create c:\tmp)
mkdir \tmp

-- Copy Sample Data to \tmp folder
copy /Y %ONLEPLIBPATH%\events_20140807.csv.gz \tmp\

-- Start Manager
scala  -J-Xmx1024M -cp %ONLEPLIBPATH%\log4j-1.2.17.jar;%ONLEPLIBPATH%\metadata_2.10-1.0.jar;%ONLEPLIBPATH%\onlepbase_2.10-1.0.jar %ONLEPLIBPATH%\onlepmanager_2.10-1.0.jar --config %ONLEPLIBPATH%\simp_samp_node1_config.cfg




On Linux:-

From trunk Do this:

-- Making packages
sbt package

-- Take the Folder where you want to copy the jars and set it to ENV variable and Create that Folder if it does not exists
export ONLEPLIBPATH=/tmp/OnLEPNew
mkdir -p $ONLEPLIBPATH

-- Copy jars required
cp BaseFunctions/target/scala-2.10/basefunctions_2.10-0.1.0.jar $ONLEPLIBPATH
cp BaseTypes/target/scala-2.10/basetypes_2.10-0.1.0.jar $ONLEPLIBPATH
cp EnvContexts/SimpleEnvContextImpl/target/scala-2.10/simpleenvcontextimpl_2.10-1.0.jar $ONLEPLIBPATH
cp InputOutputAdapters/FileSimpleInputOutputAdapters/target/scala-2.10/filesimpleinputoutputadapters_2.10-1.0.jar $ONLEPLIBPATH
cp InputOutputAdapters/KafkaSimpleInputOutputAdapters/target/scala-2.10/kafkasimpleinputoutputadapters_2.10-1.0.jar $ONLEPLIBPATH
cp MessageDef/target/scala-2.10/messagedef_2.10-1.0.jar $ONLEPLIBPATH
cp Metadata/target/scala-2.10/metadata_2.10-1.0.jar $ONLEPLIBPATH
cp MetadataAPI/target/scala-2.10/metadataapi_2.10-1.0.jar $ONLEPLIBPATH
cp MetadataBootstrap/MsgsAndContainers/target/scala-2.10/msgsandcontainers_2.10-1.0.jar $ONLEPLIBPATH
cp OnLEPBase/target/scala-2.10/onlepbase_2.10-1.0.jar $ONLEPLIBPATH
cp OnLEPManager/target/scala-2.10/onlepmanager_2.10-1.0.jar $ONLEPLIBPATH
cp Pmml/MethodExtractor/target/scala-2.10/methodextractor_2.10-1.0.jar $ONLEPLIBPATH
cp Pmml/PmmlCompiler/target/scala-2.10/pmmlcompiler_2.10-1.0.jar $ONLEPLIBPATH
cp Pmml/PmmlRuntime/target/scala-2.10/pmmlruntime_2.10-1.0.jar $ONLEPLIBPATH
cp Pmml/PmmlUdfs/target/scala-2.10/pmmludfs_2.10-1.0.jar $ONLEPLIBPATH
cp Storage/target/scala-2.10/storage_2.10-0.0.0.2.jar $ONLEPLIBPATH
cp Tools/Loadtest/target/scala-2.10/loadtest_2.10-0.0.0.1.jar $ONLEPLIBPATH
cp Tools/LoadtestCommon/target/scala-2.10/loadtestcommon_2.10-0.0.0.1.jar $ONLEPLIBPATH
cp Tools/LoadtestMaster/target/scala-2.10/loadtestmaster_2.10-0.0.0.1.jar $ONLEPLIBPATH
cp Tools/LoadtestRunner/target/scala-2.10/loadtestrunner_2.10-0.0.0.1.jar $ONLEPLIBPATH
cp Tools/MetadataBootstrap/target/scala-2.10/metadatabootstrap_2.10-1.0.jar $ONLEPLIBPATH
cp Tools/OnLEPEBModel/target/scala-2.10/onlepebmodel_2.10-1.0.jar $ONLEPLIBPATH

-- Copy Sample Config & Log properties
cp OnLEPManager/src/main/resources/* $ONLEPLIBPATH

-- Copy log4j-1.2.17.jar into the same jars
cp ../externals/log4j/log4j-1.2.17.jar $ONLEPLIBPATH

-- Copy Sample Data
cp ../externals/SampleData/EngineSampleData/events_20140807.csv.gz $ONLEPLIBPATH

-- Change to that directory
cd $ONLEPLIBPATH

-- Create /tmp folder
mkdir -p /tmp

-- Copy Sample Data to /tmp folder
cp $ONLEPLIBPATH/events_20140807.csv.gz /tmp/

-- Start Manager
scala  -J-Xmx1024M -cp $ONLEPLIBPATH/log4j-1.2.15.jar;$ONLEPLIBPATH/metadatabootstrap_2.10-1.0.jar;$ONLEPLIBPATH/metadata_2.10-1.0.jar;$ONLEPLIBPATH/onlepbase_2.10-1.0.jar $ONLEPLIBPATH/onlepmanager_2.10-1.0.jar --config $ONLEPLIBPATH/simp_samp_node1_config.cfg


====================================== Steps with updated metadata bootstrap (Updated on 2014-08-27) Begin ======================================
On Windows:-

-- Take the Folder where you want to copy the jars and set it to ENV variable and Create that Folder if it does not exists
set ONLEPLIBPATH=D:\temp\OnLEPNew
mkdir %ONLEPLIBPATH%

-- Copy jars required
copy /Y BaseFunctions\target\scala-2.10\basefunctions_2.10-0.1.0.jar %ONLEPLIBPATH%
copy /Y BaseTypes\target\scala-2.10\basetypes_2.10-0.1.0.jar %ONLEPLIBPATH%
copy /Y EnvContexts\SimpleEnvContextImpl\target\scala-2.10\simpleenvcontextimpl_2.10-1.0.jar %ONLEPLIBPATH%
copy /Y InputOutputAdapters\FileSimpleInputOutputAdapters\target\scala-2.10\filesimpleinputoutputadapters_2.10-1.0.jar %ONLEPLIBPATH%
copy /Y InputOutputAdapters\FileSimpleInputOutputAdapters\target\scala-2.10\kafkasimpleinputoutputadapters_2.10-1.0.jar %ONLEPLIBPATH%
copy /Y OnLEPBase\target\scala-2.10\onlepbase_2.10-1.0.jar %ONLEPLIBPATH%
copy /Y OnLEPManager\target\scala-2.10\onlepmanager_2.10-1.0.jar %ONLEPLIBPATH%
copy /Y Storage\target\scala-2.10\storage_2.10-0.0.0.2.jar %ONLEPLIBPATH%
copy /Y Metadata\target\scala-2.10\metadata_2.10-1.0.jar %ONLEPLIBPATH%
copy /Y Tools\OnLEPEBModel\target\scala-2.10\onlepebmodel_2.10-1.0.jar %ONLEPLIBPATH%

-- Copy Sample Config & Log properties
copy /Y OnLEPManager\src\main\resources\* %ONLEPLIBPATH%

-- Copy log4j-1.2.17.jar into the same jars
copy /Y ..\externals\log4j\log4j-1.2.17.jar %ONLEPLIBPATH%

-- Copy Sample Data
copy /Y ..\externals\SampleData\EngineSampleData\events_20140807.csv.gz %ONLEPLIBPATH%

-- Start Manager
scala  -J-Xmx1024M -cp %ONLEPLIBPATH%\log4j-1.2.17.jar;%ONLEPLIBPATH%\metadata_2.10-1.0.jar;%ONLEPLIBPATH%\onlepbase_2.10-1.0.jar %ONLEPLIBPATH%\onlepmanager_2.10-1.0.jar --config %ONLEPLIBPATH%\simp_samp_node1_config.cfg




On Linux:-

-- Take the Folder where you want to copy the jars and set it to ENV variable and Create that Folder if it does not exists
export ONLEPLIBPATH=/tmp/OnLEPNew
mkdir -p $ONLEPLIBPATH

-- Copy jars required
cp BaseFunctions/target/scala-2.10/basefunctions_2.10-0.1.0.jar $ONLEPLIBPATH
cp BaseTypes/target/scala-2.10/basetypes_2.10-0.1.0.jar $ONLEPLIBPATH
cp EnvContexts/SimpleEnvContextImpl/target/scala-2.10/simpleenvcontextimpl_2.10-1.0.jar $ONLEPLIBPATH
cp InputOutputAdapters/FileSimpleInputOutputAdapters/target/scala-2.10/filesimpleinputoutputadapters_2.10-1.0.jar $ONLEPLIBPATH
cp OnLEPBase/target/scala-2.10/onlepbase_2.10-1.0.jar $ONLEPLIBPATH
cp OnLEPManager/target/scala-2.10/onlepmanager_2.10-1.0.jar $ONLEPLIBPATH
cp Storage/target/scala-2.10/storage_2.10-0.0.0.2.jar $ONLEPLIBPATH
cp Metadata/target/scala-2.10/metadata_2.10-1.0.jar $ONLEPLIBPATH
cp Tools/OnLEPEBModel/target/scala-2.10/onlepebmodel_2.10-1.0.jar $ONLEPLIBPATH


-- Copy Sample Config & Log properties
cp OnLEPManager/src/main/resources/* $ONLEPLIBPATH

-- Copy log4j-1.2.17.jar into the same jars
cp ../externals/log4j/log4j-1.2.17.jar $ONLEPLIBPATH

-- Copy Sample Data
cp ../externals/SampleData/EngineSampleData/events_20140807.csv.gz $ONLEPLIBPATH

-- Change to that directory
cd $ONLEPLIBPATH

-- Create /tmp folder
mkdir -p /tmp

-- Copy Sample Data to /tmp folder
cp $ONLEPLIBPATH/events_20140807.csv.gz /tmp/

-- Start Manager
scala  -J-Xmx1024M -cp $ONLEPLIBPATH/log4j-1.2.17.jar:$ONLEPLIBPATH/metadata_2.10-1.0.jar:$ONLEPLIBPATH/onlepbase_2.10-1.0.jar $ONLEPLIBPATH/onlepmanager_2.10-1.0.jar --config $ONLEPLIBPATH/simp_samp_node1_config.cfg

======================================= Steps with updated metadata bootstrap (Updated on 2014-08-27) End =======================================

-- Build fat-jars
Currently, necessary support to build a fat jar is added to only to the projects OnLEPManager and MetadataAPI
cd $HOME/ligadata/trunk
sbt package ( make sure you do a clean compile of all projects)
sbt 
sbt > project OnLEPManager
sbt > assembly
sbt > project MetadataAPI
sbt > assembly

-- Use fat-jars
-- Start Engine(needs additional setup as described above) using fat-jar(in svn)
-- If you have rebuilt the fat-jar in your environment, you can access it directly as follows
java -jar $HOME/ligadata/trunk/OnLEPManager/target/scala-2.10/OnLEPManager-1.0 --config $ONLEPLIBPATH/simp_samp_node1_config.cfg

-- Start MetadataAPI test harness using fat-jar(in svn)
java -jar $HOME/ligadata/trunk/MetadataAPI/target/scala-2.10/MetadataAPI-1.0

## DEBUGGING - Starting the onlep manager for remote debugging

export ONLEPPATH=/tmp/OnLEPNew
java -Xdebug -Xrunjdwp:transport=dt_socket,address=8998,server=y -jar ~/ligadata/barc/svn/ligadata/trunk/OnLEPManager/target/scala-2.10/OnLEPManager-1.0 --config $ONLEPPATH/Poc.cfg

# From eclipse create a remote debug application with the host where the command above was executed 
# (e.g., localhost if debugging on your own machine) and port 8998

======================================= Building Alchemy test data ======================================= 
# The csv version of the data is in the AlchemyKVInit resource folder currently 

# Create a number of test datasets for engine message input copy them someplace and do this from that place:
gzip -c OneCustomerTransactionsAlerts.csv > OneCustomerTransactionsAlerts.gz
gzip -c OneCustomerTransactionsAlerts.csv > OneCustomerTransactionsAlerts.gz
gzip -c OneCustomerTransactionsNoAlerts.csv > OneCustomerTransactionsNoAlerts.gz
gzip -c transactionsNoAlerts.csv > transactionsNoAlerts.gz
gzip -c transactionsAlerts.csv > transactionsAlerts.gz
gzip -c OneCustomerTransactionsAlerts.csv > OneCustomerTransactionsAlerts.gz
gzip -c OneCustomerTransactionsNoAlerts.csv > OneCustomerTransactionsNoAlerts.gz

# That will leave the csv files there in addition to creating the compressed versions.  If -c is omitted above, the csv file is replaced by the gz file.

#
Now, if we look at the scalac man page, the scalac compiler has a –g option that can take the following values:

    "none" generates no debugging info,
    "source" generates only the source file attribute,
    "line" generates source and line number information,
    "vars" generates source, line number and local variable information,
    "notc" generates all of the above and will not perform tail call optimization.

